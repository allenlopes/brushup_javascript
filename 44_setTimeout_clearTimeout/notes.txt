#1] We have seen in setInterval that whenever we want in a particular time being our code should be executed repeatedly.
In setTimeout it means that our code will be executed in a specific time for one time.


#2] Suppose we want text "Hello" to be printed for single time and after 3 seconds once we reload the page, so we can use setTimeout function.
<script>
    setTimeout(test, 3000); /* In bracket there are 2 parameters (the function to be executed, time interval(which is in milliseconds) for which the function defined should be executed)
    So for the above setTimeout we want function test to run for single time after 3 seconds(since 3000 millisecond = 3 second)*/

    function test() {
        console.log("Hello!"); /* In console it will print the 'Hello' only for single time and after 3 seconds it is being executed, since we have
                              defined the setTimeout function */
    }
</script>


#3] Suppose we want that text "Hello" to be printed for single time and after 3 seconds once we reload the page, but we also
specify a button wherein if we clicked on that button before 3 seconds then text "Hello" won't be printed in the console.
Code ->
<input type="button" onclick="clearTi()" value="Click" /> <!-- Here we specify the button -->

<script>
    let timeO = setTimeout(test, 3000); /* In bracket there are 2 parameters (the function to be executed, time interval(which is in milliseconds) for which the function defined should be executed)
    So for the above setTimeout we want function test to run for single time after 3 seconds(since 3000 millisecond = 3 second)*/

    function test() {
        console.log("Hello!"); /* In console it will print the 'Hello' only for single time and after 3 seconds it is being executed, since we have
                              defined the setTimeout function */
    }

    function clearTi(){
        clearTimeout(TimeO); /* We have used clearTimeout() function to stop act before the function test is executed. */
    }
</script>


#4] Suppose we created a form with input textbox and an button to submit the form,
In the form an user has to type his/her name and once the user clicks on submit it should display on the screen the user's
name along with 'Hello!' text, so if the user entered his name as "Allen" and clicked onsubmit button, the output should
look like "Hello! Allen". AND
If the user doesn't types any value inside the input box, and clicks on the submit button it should display on the screen
the output as 'Please enter name!'
Code ->

<form>
    <input type="test" id="name" />
    <input type="button" onclick="submitData()" value="click" />
</form>

<div id="result"></div>

<script>
    function submitData(){
        let name = document.getElementById('name').value;
        if(name == ''){
            document.getElementById('result').innerHTML='Please enter name!'; // If user doesn't types any value, it will display the -> if statement
        }
        else{
            document.getElementById('result').innerHTML='Hello! '+name; // If user entered his name and clicked on submit, it will display the -> else statement
        }
        console.log(name);
    }
</script>



#5] Taking reference of above code i.e #4] point, we want that after certain amount of time, like say after 5 seconds,
we want the output text a like 'Please enter name!' and 'Hello! Allen' and also the input text inside our text box
should not be there on the screen we can do that by setInterval
Code ->

<form>
    <input type="test" id="name" />
    <input type="button" onclick="submitData()" value="click" />
</form>

<div id="result"></div>

<script>
    function submitData(){
        let name = document.getElementById('name').value;
        if(name == ''){
            document.getElementById('result').innerHTML='Please enter name!'; // If user doesn't types any value, it will display the -> if statement
        }
        else{
            document.getElementById('result').innerHTML='Hello! '+name; // If user entered his name and clicked on submit, it will display the -> else statement
        }
        setTimeout(clearForm, 5000); /* This setTimeout function will execute function clearForm() after 5000 milliseconds i.e
        after 5 seconds */
    }

    function clearForm() { /* The clearForm() function will set the value inside input box as empty after 5 seconds, and
    also the output text.*/
        document.getElementById('result').innerHTML='';
        document.getElementById('name').value ='';
    }
</script>


#5] Taking reference of above code i.e #5] point, we want that after certain amount of time, like say after 5 seconds,
we want that if the output text is like 'Please enter name!' should only disappear after 5 seconds, then we do that
by placing the setInterval() function inside if statement.
Code->
<form>
    <input type="test" id="name" />
    <input type="button" onclick="submitData()" value="click" />
</form>

<div id="result"></div>

<script>
    function submitData(){
        let name = document.getElementById('name').value;
        if(name == ''){
            document.getElementById('result').innerHTML='Please enter name!'; // If user doesn't types any value, it will display the -> if statement
            setTimeout(clearForm, 5000); /* This setTimeout function will execute function clearForm() after 5000 milliseconds i.e
                                        after 5 seconds */
        }
        else{
            document.getElementById('result').innerHTML='Hello! '+name; // If user entered his name and clicked on submit, it will display the -> else statement
        }

    }

    function clearForm() { /* The clearForm() function will set the value inside input box as empty after 5 seconds, and
    also the output text.*/
        document.getElementById('result').innerHTML='';
        document.getElementById('name').value ='';
    }
</script>


#6]
<!-- Suppose we want to give custom input of a fname and lname, where the setTimeout function will print the "Hello! Allen Lopes"
after 2 seconds but only for single time, since I have set 2000 millisecond time, which is equal to 2 seconds.
Note that it will display the output in console. -->
Code ->

<script>
    setTimeout(test, 2000, "Allen","Lopes");

    function test(fname, lname){
        console.log("Hello! "+fname+' '+lname); /*It will execute "Hello! Allen Lopes" after 2 seconds*/
    }
</script>