#1] When we code we sometimes have requirement that a particular script or particular code should be executed again and
    again after some time interval, so here we can use setInterval function.


#2] setInterval ->
<script>
    setInterval(test, 1000); /* In bracket there are 2 parameters (the function to be executed, time interval(which is in milliseconds) at which the function defined should be executed)
    So for the above setInterval we want function test to run after every 1 second(since 1000 millisecond = 1 second)*/

    function test() {
        console.log('Hello'); /* In console it will print the 'Hello' after every 1 second, since we have
                              defined the setInterval function */
    }
</script>


#3] Suppose we want to create an counter, wherein after time interval of every 2 seconds new number is printed, like first 1, then number 2,
    then 3, 4, 5, .... likewise continue, so we can write the code as ->
<div id="counter"> 1 </div>
<script>
    setInterval(test, 2000);
    let x = 1;
    function test(){
        x++; /* It will increment the value of x after the every 2 second since time interval is set for 2 seconds only,
        so first 1 is printed, then after 2 seconds 2 is printed, then after 2 seconds 3 is printed, then after 2 seconds
        4 is printed, likewise so on... */
        document.getElementById('counter').innerHTML = x; /* It will print the counter numbers onto our screen */
        // console.log(x); /* It will print the counter numbers onto our console */
    }
</script>


#4] Suppose we have created an counter, and after a particular time we want that counter should stop, like the interval
should stop then,
<!-- Suppose we have created an counter, and after a particular time we want that counter should stop, like the interval
should stop then, -->

<div id="counter"> 1 </div>
<script>
    let intCounter = setInterval(test, 500); // first we take the setInterval data in an variable.
    let x = 1;
    function test(){
        if(x == 23){ /* It will print the value of x till number 23 only, since we have given the condition */
            clearInterval(intCounter); /* We use clearInterval function to stop the counter in between where we have
            condition specified. */
        }
        document.getElementById('counter').innerHTML = x; /* It will print the counter numbers onto our screen */
        // console.log(x); /* It will print the counter numbers onto our console */
        x++; /* It will increment the value of x after the every 1 second since time interval is set for 1 seconds only,
        so first 1 is printed, then after 1 seconds 2 is printed, then after 1 seconds 3 is printed, then after 1 seconds
        4 is printed, likewise so on... but here it will print upto value 23 only and not futher more since we have
        set the condition in 'if statement' */
    }
</script>


#5] Suppose we have created an counter button and we have given background colour to the button, with height and width
specified, and after every 2 secs we want the width to be increased by 10px, so we can do it by the code ->
<div id="counter"> 1 </div>
<script>
    let x = 10;
    setInterval(incWidth, 2000);
    function incWidth() {
        x = x+10;
        let c = document.getElementById('counter');
        c.style.width=x+ "px"
    }
</script>

<style>
    #counter {
        background-color: red;
        width: 1px;
        height: 50px;
    }
</style>